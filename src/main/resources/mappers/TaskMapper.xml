<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.demo.mapper.TaskMapper">
    <select id="getAllTasksByUserId" resultType="com.example.demo.model.Task">
        SELECT t.task_id, t.parent_task_id, t.title, t.content, t.start_date, t.end_date, t.status
        FROM task t
                 LEFT JOIN user_task ut on t.task_id = ut.task_id
        WHERE ut.user_id = #{userId}
    </select>
    <select id="getTaskById" resultType="com.example.demo.model.Task">
        SELECT t.task_id, t.parent_task_id, t.title, t.content, t.start_date, t.end_date, t.status
        FROM task t
                 LEFT JOIN user_task ut on t.task_id = ut.task_id
        WHERE t.task_id = #{taskId}
          AND ut.user_id = #{userId}
    </select>
    <insert id="createTask">
        INSERT INTO task (parent_task_id, title, content, start_date, end_date, status, created_by)
        VALUES (#{task.parentTaskId}, #{task.title}, #{task.content}, #{task.startDate}, #{task.endDate},
                #{task.status}, #{userId})
    </insert>
    <update id="updateTask">
        UPDATE task
        SET parent_task_id = #{task.parentTaskId},
            title          = #{task.title},
            content        = #{task.content},
            start_date     = #{task.startDate},
            end_date       = #{task.endDate},
            updated_by     = #{userId}
        WHERE task_id = #{task.taskId}
    </update>
    <update id="updateTaskStatus">
        UPDATE task
        SET status     = #{statusId},
            updated_by = #{userId}
        WHERE task_id = #{taskId}
    </update>
    <update id="deleteTask">
        UPDATE task
        SET delete_flg = 1,
            updated_by = #{userId}
        WHERE task_id = #{taskId}
    </update>
</mapper>