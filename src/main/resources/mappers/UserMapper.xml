<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.demo.mapper.UserMapper">
    <insert id="createUser" parameterType="com.example.demo.model.User" useGeneratedKeys="true" keyProperty="userId">
        INSERT INTO user (username, email, password, display_name)
        values (#{username}, #{email}, #{password}, #{displayName});
    </insert>
    <update id="updateUser" parameterType="com.example.demo.model.User">
        UPDATE user
        SET username    = #{username},
            email       = #{email},
            password    = #{password},
            display_name= #{displayName},
            avatar      = #{avatar},
            description = #{description},
            status      = #{status}
        WHERE user_id = #{userId}
          AND (delete_flg = 0)
    </update>
    <update id="deleteUser">
        UPDATE user
        SET delete_flg = 1
        WHERE user_id = #{userId}
    </update>
    <select id="getUserById" resultType="com.example.demo.model.User">
        SELECT user_id,
               username,
               email,
               password,
               display_name,
               avatar,
               description,
               status,
               created_at,
               created_by,
               updated_at,
               updated_by
        FROM user
        WHERE delete_flg = 0
          AND user_id = #{userId}
    </select>
    <select id="getUserByUsername" resultType="com.example.demo.model.User">
        SELECT user_id,
               username,
               email,
               password,
               display_name,
               avatar,
               description,
               status,
               created_at,
               created_by,
               updated_at,
               updated_by
        FROM user
        WHERE delete_flg = 0
          AND username = #{username}
    </select>
    <select id="getUserByEmail" resultType="com.example.demo.model.User">
        SELECT user_id,
               username,
               email,
               password,
               display_name,
               avatar,
               description,
               status,
               created_at,
               created_by,
               updated_at,
               updated_by
        FROM user
        WHERE delete_flg = 0
          AND email = #{email}
    </select>
    <select id="getAllUsers" resultType="com.example.demo.model.User">
        SELECT user_id,
               username,
               email,
               password,
               display_name,
               avatar,
               description,
               status,
               created_at,
               created_by,
               updated_at,
               updated_by
        FROM user
        WHERE delete_flg = 0
        LIMIT 1000
    </select>
    <select id="countByUsername" resultType="java.lang.Integer">
        SELECT COUNT(*)
        FROM user
        WHERE delete_flg = 0
          AND username = #{username}
    </select>
    <select id="countByEmail" resultType="java.lang.Integer">
        SELECT COUNT(*)
        FROM user
        WHERE delete_flg = 0
          AND email = #{email}
    </select>
    <select id="countByUsernameAndEmail" resultType="java.lang.Integer">
        SELECT COUNT(*)
        FROM user
        WHERE delete_flg = 0
        AND (username = #{username} OR email = #{email})
    </select>
    <select id="searchUser" resultType="com.example.demo.model.User">
        SELECT user_id,
        username,
        email,
        password,
        display_name,
        avatar,
        description,
        status,
        created_at,
        created_by,
        updated_at,
        updated_by
        FROM user
        WHERE delete_flg = 0
        <if test="keywords != null and keywords.length > 0">
            AND
            <foreach collection="keywords" item="keyword" separator="OR" open="(" close=")">
                username LIKE CONCAT('%', #{keyword}, '%')
                OR display_name LIKE CONCAT('%', #{keyword}, '%')
            </foreach>
        </if>
        LIMIT 1000
    </select>
</mapper>